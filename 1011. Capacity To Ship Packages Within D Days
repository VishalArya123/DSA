class Solution {
public:

    int calculate_days(vector<int>& weights,int mid,int n){
        int number_of_days=1;
        int c=0;
        for(int i=0;i<n;i++){
            if(c+weights[i]>mid){
                number_of_days++;
                c=0;
            }
            c+=weights[i];
        }
        return number_of_days;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int n=weights.size();
        int low=*max_element(weights.begin(),weights.end());
        int high=accumulate(weights.begin(),weights.end(),0);
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(calculate_days(weights,mid,n)<=days){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};