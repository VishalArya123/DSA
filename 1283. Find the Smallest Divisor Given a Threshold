class Solution {
public:

    long long total_sum(vector<int>& nums,int mid,int n){
        long long total=0;
        for(int i=0;i<n;i++){
            total+=ceil((double)nums[i]/mid);
        }
        return total;
    }

    int smallestDivisor(vector<int>& nums, int threshold) {
        int n=nums.size();
        int low=1;
        int high=*max_element(nums.begin(),nums.end());
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(total_sum(nums,mid,n)<=threshold){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};