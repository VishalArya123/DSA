class Solution {
public:

    int total_bouquets(vector<int>& bloomDay,int n,int mid,int k){
        int bouquets=0;
        int c=0;
        for(int i=0;i<n;i++){
            if(bloomDay[i]<=mid){
                c++;
                if(c==k){
                    bouquets++;
                    c=0;
                }
            }
            else{
                c=0;
            }
        }
        return bouquets;
    }

    int minDays(vector<int>& bloomDay, int m, int k) {
        int n=bloomDay.size();
        int low=*min_element(bloomDay.begin(),bloomDay.end());
        int high=*max_element(bloomDay.begin(),bloomDay.end());
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(total_bouquets(bloomDay, n, mid, k)>=m){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};