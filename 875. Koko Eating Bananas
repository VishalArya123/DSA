class Solution {
public:

    long long time_taken(vector<int>& arr,int mid,int n){
        long long total_time=0;
        for(int i=0;i<n;i++){
            total_time+=ceil((double)arr[i]/mid);
        }
        return total_time;
    }

    int minEatingSpeed(vector<int>& piles, int h) {
        int n=piles.size();
        int low=1;
        int high=*max_element(piles.begin(),piles.end());
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(time_taken(piles,mid,n)<=h){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};